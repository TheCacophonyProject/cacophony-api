services:
  - docker

dist: bionic

language: node_js
node_js:
  - "lts/*"

env:
  - IS_CI_ENV=true

python:
  - "3.6.1"

install:
  - npm i -g npm
  - npm install -g apidoc@0.20.0
  - npm run apidoc
  - npm install -g eslint
  # global eslint uses local plugins
  - npm install eslint-plugin-cypress eslint-plugin-no-only-tests
  - sudo apt update
  - sudo apt install python3-pip
  - sudo apt-get install python3-setuptools
  - python3 -m pip install -r test/requirements.txt
  - docker-compose build
  - docker-compose up --force-recreate &> dockerstart.log &

script:
 - npm run lint
 - black --diff --check ./test
 - find . -regextype posix-extended -regex '.*\.(ts|js)$' | egrep -v "(./node_modules/*|./apidoc*|package*.js)" | xargs npx prettier --check  || (echo "Please run './beautify.sh' to clean up formatting of files."; false)
 - ./wait-for-api || { docker ps; docker-compose logs; exit 1; }
# Apply migration undo and redo to test undo migration
 - docker-compose exec server /app/node_modules/.bin/sequelize db:migrate:undo --config /app/config/app_test_default.js --migrations-path /app/migrations
 - docker-compose exec server /app/node_modules/.bin/sequelize db:migrate --config /app/config/app_test_default.js --migrations-path /app/migrations

 - date
 - cd test
 - python3 -m pytest --log-api-on-fail
 - cd ..

 - cd test-cypress
 - cp cypress.json.TEMPLATE cypress.json
 - npm install
 - npm run release
 - cd ..

before_deploy:
- version=${TRAVIS_TAG/v/}
# Install nfpm tool (for building debs)
- mkdir /tmp/nfpm
- "curl -sL https://github.com/goreleaser/nfpm/releases/download/v0.9.5/nfpm_0.9.5_Linux_x86_64.tar.gz | tar -C /tmp/nfpm -xzf -"
- export PATH=/tmp/nfpm:$PATH
# Install json tool needed by build script
- npm install -g json
# Build release .deb
- "_release/build.sh ${version}"

deploy:
  provider: releases
  api_key:
    secure: oc5WOWWROzUhVmtmPU308vGhFBGaAhU2RACUjfVnrlgevrK4lx178lV60ps8wqHWZh9b58h13LVlPI5iB1jVTdWQU8eGCEW9VIkMTQ21Ao2zSU+kOCs4JGLx/fhjslM+tKyopmIpk6FsITdTGqtbTap2D0FnEoaEVA/LWq0vJdy5MItUALe3mSm8uIGRSezifYZj6fhxuCCM6vuah02rf7vY5FPgkLAzWDpPX4jg6AfR6SqptmgcfoMqQuOjYY4bha/lPqlJ+auGAmUdSVJEnLjjvoFw6VOrBMiSm77DdyHA+5mG6Ag8dTbRQhnRS5JLQfk9/J1NyEugcHMYvA0jvd2p4P1PxwKuUu49APPPgFnVs7WiQh3G48s1fD5vjvRbBgnyrCXadYH3725zyNsFRyG2CdPt/I7gmOsl0ksYzRglf3GyGa96TYj5Ns/Yk0Smn8WYBu5jdXIo0E3TKUVkTDwNZbexW3FnNY7v7APXAl1fAWGlcSefaBrfT+w19p/hcv0Z9DYGUju0BcJIs7SKONdjqeSqSLq9eecJ69pQHYH+K0ZkrSXCpiFoS0Trwi6xDJHSAdLGbBrB0L4t/+X7/5B34PrCUXkAqBH03p2+28FBfuMQ1+GNuVoP3NuGvXDi9H1Ux7HBfC+HYJK9zEiPdqPSaroG7q9XlX9yWEsyStM=
  skip_cleanup: true
  file_glob: true
  file: "dist/*.deb"
  on:
    tags: true
    repo: TheCacophonyProject/cacophony-api
