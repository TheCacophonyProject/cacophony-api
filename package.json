{
  "name": "cacophony-api",
  "license": "AGPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/TheCacophonyProject/cacophony-api.git"
  },
  "version": "0.0.1",
  "dependencies": {
    "@mapbox/node-pre-gyp": "^1.0.5",
    "@types/express": "^4.17.4",
    "@types/jsonwebtoken": "^8.3.8",
    "@types/mime": "^2.0.3",
    "apidoc": "^0.20.0",
    "aws-sdk": "^2.653.0",
    "bcrypt": "^5.0.1",
    "body-parser": "^1.19.0",
    "commander": "^2.20.3",
    "cptv-decoder": "github:TheCacophonyProject/cptv-rs#v1.2.0",
    "emailjs": "^3.4.0",
    "express": "^4.17.1",
    "express-validator": "^5.3.1",
    "express-winston": "^2.5.0",
    "extend": "^3.0.2",
    "fast-csv": "^3.7.0",
    "fs": "0.0.2",
    "fstream": "^1.0.12",
    "install": "^0.12.2",
    "json-pointer": "^0.5.0",
    "jsonschema": "^1.4.0",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.13",
    "mime": "^2.4.4",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.28",
    "multiparty": "^4.2.2",
    "nan": "^2.14.0",
    "node-cmd": "^1.1.1",
    "node-gyp": "^4.0.0",
    "passport": "^0.3.2",
    "passport-anonymous": "^1.0.1",
    "passport-jwt": "^4.0.0",
    "path": "^0.12.7",
    "pg": "^8.5.1",
    "pg-hstore": "^2.3.3",
    "pg-native": "^3.0.0",
    "pg-types": "^1.x",
    "sequelize": "^5.21.6",
    "sequelize-cli": "^5.5.1",
    "sharp": "^0.28.3",
    "tar": "^4.4.13",
    "url-join": "^4.0.1",
    "uuid": "^8.3.2",
    "winston": "^1.0.1"
  },
  "devDependencies": {
    "eslint": "^6.8.0",
    "eslint-plugin-cypress": "^2.7.0",
    "eslint-plugin-no-only-tests": "^2.4.0",
    "eslint-utils": "^2.0.0",
    "prettier": "^2.3.1",
    "tsc-watch": "^4.2.9",
    "typescript": "^4.2.4"
  },
  "scripts": {
    "lint": "eslint --ignore-pattern 'dynamic-import-esm.js' --ignore-path .gitignore .",
    "lint:fix": "eslint --fix --ignore-pattern 'dynamic-import-esm.js' --ignore-path .gitignore .",
    "apidoc": "apidoc -i api/V1/ -o apidoc/",
    "db-migrate": "sequelize db:migrate",
    "new-migration": "sequelize migration:generate --name",
    "dev": "docker-compose build && docker-compose up --force-recreate",
    "dev:bash": "docker-compose exec server bash",
    "clean": "tsc --build --clean"
  }
}
